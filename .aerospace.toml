# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = ['exec-and-forget sketchybar']
# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 20

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# Mouse lazily follows any focus (window or workspace)
# on-focus-changed = ['move-mouse window-lazy-center']


# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 13
inner.vertical = 13
outer.left = 13
outer.right = 13
outer.top = [{ monitor.'built-in' = 10 }, { monitor."dell" = 47 }, 47]
outer.bottom = 13

[workspace-to-monitor-force-assignment]
1 = 'main'                 # Monitor sequence number from left to right. 1-based indexing
2 = 'main'                 # Main monitor
3 = 'main'                 # Non-main monitor in case when there are only two monitors
4 = 'main'                 # Case insensitive regex substring
5 = 'main'                 # Case insensitive regex match
6 = ['secondary', 'main']  # Case insensitive regex match
7 = ['secondary', 'main']  # Case insensitive regex match
8 = ['secondary', 'main']  # Case insensitive regex match
9 = ['secondary', 'main']  # Case insensitive regex match
10 = ['secondary', 'main'] # Case insensitive regex match

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
cmd-enter = '''exec-and-forget osascript -e '
tell application "Ghostty"
    if it is running then
        activate
        tell application "System Events"
            keystroke "n" using {command down}
        end tell
    else
        activate
    end if
end tell'
'''
#
cmd-shift-g = '''exec-and-forget osascript -e '
tell application "Google Chrome"
    if it is running then
        make new window
    else
        activate
    end if
end tell'
'''

cmd-shift-m = '''exec-and-forget osascript -e '
tell application "Mail"
    activate
end tell'
'''

cmd-shift-f = '''exec-and-forget osascript -e '
tell application "Finder" 
    open ("/Users/tao-wei/" as POSIX file)
    activate
end tell'
'''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-slash = 'layout tiles horizontal vertical'
cmd-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-h = 'focus --boundaries all-monitors-outer-frame left'
cmd-j = 'focus --boundaries all-monitors-outer-frame down'
cmd-k = 'focus --boundaries all-monitors-outer-frame up'
cmd-l = 'focus --boundaries all-monitors-outer-frame right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-shift-h = 'move left'
cmd-shift-j = 'move down'
cmd-shift-k = 'move up'
cmd-shift-l = 'move right'

cmd-alt-shift-k = 'move-node-to-monitor --focus-follows-window up'
cmd-alt-shift-j = 'move-node-to-monitor --focus-follows-window down'
cmd-alt-shift-h = 'move-node-to-monitor --focus-follows-window left'
cmd-alt-shift-l = 'move-node-to-monitor --focus-follows-window right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
cmd-ctrl-l = 'resize width -50'
cmd-ctrl-h = 'resize width +50'
cmd-ctrl-k = 'resize height -50'
cmd-ctrl-j = 'resize height +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-1 = 'workspace 1 --auto-back-and-forth'
cmd-2 = 'workspace 2 --auto-back-and-forth'
cmd-3 = 'workspace 3 --auto-back-and-forth'
cmd-4 = 'workspace 4 --auto-back-and-forth'
cmd-5 = 'workspace 5 --auto-back-and-forth'
cmd-6 = 'workspace 6 --auto-back-and-forth'
cmd-7 = 'workspace 7 --auto-back-and-forth'
cmd-8 = 'workspace 8 --auto-back-and-forth'
cmd-9 = 'workspace 9 --auto-back-and-forth'
cmd-0 = 'workspace 10 --auto-back-and-forth'
cmd-rightSquareBracket = '''exec-and-forget aerospace workspace "$(cur=$(aerospace list-workspaces --focused); non=$(aerospace list-workspaces --monitor focused --empty no); next=$(echo "$non" | awk -v c="$cur" '$1 > c { print $1; exit }'); echo ${next:-$cur})"'''
cmd-leftSquareBracket = '''exec-and-forget aerospace workspace "$(cur=$(aerospace list-workspaces --focused); non=$(aerospace list-workspaces --monitor focused --empty no); prev=$(echo "$non" | awk -v c="$cur" '$1 < c { p=$1 } END { if (p) print p }'); echo ${prev:-$cur})"'''

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
cmd-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
cmd-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
cmd-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
cmd-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'
cmd-shift-6 = 'move-node-to-workspace 6 --focus-follows-window'
cmd-shift-7 = 'move-node-to-workspace 7 --focus-follows-window'
cmd-shift-8 = 'move-node-to-workspace 8 --focus-follows-window'
cmd-shift-9 = 'move-node-to-workspace 9 --focus-follows-window'
cmd-shift-0 = 'move-node-to-workspace 10 --focus-follows-window'
cmd-shift-left = 'move-node-to-workspace prev --focus-follows-window'
cmd-shift-right = 'move-node-to-workspace next --focus-follows-window'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
cmd-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
cmd-shift-tab = 'move-workspace-to-monitor --wrap-around next'

cmd-shift-space = ['layout floating tiling'] # T
cmd-f = ['fullscreen']                       # T

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-esc = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = 'mode main'
r = ['reload-config', 'mode main']
# f = ['flatten-workspace-tree', 'mode main']                # reset layout

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

cmd-shift-h = ['join-with left', 'mode main']
cmd-shift-j = ['join-with down', 'mode main']
cmd-shift-k = ['join-with up', 'mode main']
cmd-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace 5 --focus-follows-window'

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace 4 --focus-follows-window'
